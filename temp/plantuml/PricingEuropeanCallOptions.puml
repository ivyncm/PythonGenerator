\startuml
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp {
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.App {
		
		init()
	}
}
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.presentation {
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.presentation.MainForm {
		PricingParametersForm 
		ProblemDefinitionForm 
		
	}
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.presentation.PricingParametersForm {
		
	}
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.presentation.ProblemDefinitionForm {
		
	}
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.presentation.EvaluatePayoffForm {
		
	}
}
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.businesslogic {
}
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.businesslogic.controllers {
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.businesslogic.controllers.EuropeanCallController {
		EuropeanCallProblem problem
		EuropeanCallObjective objective
		
		createProblem(Real spotPrice, Real volatility, Real anualRate, Integer maturityDays)
		createObjectiveFunction(Real strikePrice, Real cApprox)
		getProblemPlot()
	}
}
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.businesslogic.entities {
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.businesslogic.entities.EuropeanCallObjective {
		Real strikePrice
		Real cApprox
		Real breakpoints
		Real slopes
		Real offsets
		qiskit.circuit.library.LinearAmplitudeFunction linearAmplitudeFunction
		
		EuropeanCallObjective(Real strikePrice, Real cApprox, Real low, Real high, Integer numUncertaintyQubits)
	}
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.businesslogic.entities.EuropeanCallProblem {
		Integer NUM_UNCERTAINTY_QUBITS
		qiskit_finance.circuit.library.LogNormalDistribution uncertaintyModel
		
		createDistribution(Real spotPrice, Real volatility, Real anualRate, Integer maturityDays)
		getUncertaintyModel()
	}
}
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.classicalquantumlogic {
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.classicalquantumlogic.EuropeanCallDriver << QuantumDriver >> {
		EuropeanCallQuantumRequest quantumRequest
		QuantumAmplitudeEstimationAlgorithm QAEAlgorithm
		
		EuropeanCallDriver(EuropeanCallProblem problem, EuropeanCallObjective objective)
		setQuantumRequestParameters(Real epsilon, Real alpha, Integer shots)
		estimateEuropeanCall()
	}
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.classicalquantumlogic.EuropeanCallEstimation {
		qiskit.algorithms.IterativeAmplitudeEstimationResult result
		Real confidenceInterval
		
		showResults()
	}
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.classicalquantumlogic.EuropeanCallQuantumRequest << QuantumRequest >> {
		qiskit.Aer QUANTUM_COMPUTER
		Real epsilon
		Real alpha
		Integer shots
		
		setParameters(Real epsilon, Real alpha, Integer shots)
		getQuantumInstance()
	}
}
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.quantumlogic << Quantum >> {
}
package PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.quantumlogic.algorithms {
	class PricingEuropeanCallOptions.pricingEuropeanCallOptionsApp.quantumlogic.algorithms.QuantumAmplitudeEstimationAlgorithm << Quantum >> {
		EuropeanCallProblem problem
		EuropeanCallObjective objective
		Integer numQubits
		qiskit.circuit.QuantumCircuit europeanCallQuantumCricuit
		
		getCircuitImage()
		getEuropeanCallQuantumCricuit()
	}
}
PricingParametersForm .. EuropeanCallController
ProblemDefinitionForm .. EuropeanCallController
EvaluatePayoffForm .. EuropeanCallDriver
EuropeanCallDriver .. EuropeanCallProblem
EuropeanCallDriver .. EuropeanCallObjective
EuropeanCallDriver .. EuropeanCallEstimation
App .. MainForm
PricingParametersForm -- MainForm
ProblemDefinitionForm -- MainForm
EvaluatePayoffForm -- MainForm
EuropeanCallProblem -- EuropeanCallController
EuropeanCallObjective -- EuropeanCallController
EuropeanCallQuantumRequest -- EuropeanCallDriver
QuantumAmplitudeEstimationAlgorithm -- EuropeanCallDriver
EuropeanCallProblem -- QuantumAmplitudeEstimationAlgorithm
EuropeanCallObjective -- QuantumAmplitudeEstimationAlgorithm
\enduml

